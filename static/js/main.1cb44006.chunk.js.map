{"version":3,"sources":["helpers/Axios.js","reducers/Request.js","reducers/Response.js","helpers/Methods.js","component/Request.js","component/Response.js","component/Intro.js","component/Logs.js","component/Footer.js","helpers/parse.js","helpers/withElementsParsed.js","component/App.js","helpers/normalizeUrl.js","serviceWorker.js","index.js"],"names":["Axios","axios","create","interceptors","request","use","config","console","log","error","Promise","reject","initialRequestState","url","requestReducer","state","action","type","change","Error","initialResponseState","responseReducer","response","METHODS","Request","props","className","name","list","placeholder","onChange","event","changed","method","target","value","id","map","key","requestState","onClick","sendRequest","disabled","headers","rows","data","options","Response","res","responseState","err","status","readOnly","statusText","JSON","stringify","undefined","Intro","Logs","Footer","parse","raw","withElementParsed","container","elements","forEach","element","App","useReducer","dispatch","dispatchResponse","useEffect","a","toLowerCase","startsWith","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.1cb44006.chunk.js","sourcesContent":["import axios from 'axios';\r\nexport const Axios = axios.create();\r\n\r\nAxios.interceptors.request.use(\r\n\tfunction (config) {\r\n\t\tconsole.log('in interceptor');\r\n\t\treturn config;\r\n\t},\r\n\tfunction (error) {\r\n\t\treturn Promise.reject(error);\r\n\t}\r\n);\r\n","export const initialRequestState = {\r\n\turl: 'jsonplaceholder.typicode.com', // for debugging purposes\r\n};\r\n\r\nexport const requestReducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'ELEMENT_CHANGE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.change,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\tthrow new Error('Invalid Response Action');\r\n\t}\r\n};\r\n","export const initialResponseState = {};\r\nexport const responseReducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'SET_RESPONSE':\r\n\t\t\treturn { ...state, response: action.response, error: null };\r\n\t\tcase 'SET_ERROR':\r\n\t\t\treturn { ...state, error: action.error, response: null };\r\n\t\tdefault:\r\n\t\t\tthrow new Error('Invalid Request Action');\r\n\t}\r\n};\r\n","export const METHODS = [\r\n\t'GET',\r\n\t'POST',\r\n\t'PUT',\r\n\t'DELETE',\r\n\t'PATCH',\r\n\t'HEAD',\r\n\t'OPTIONS',\r\n\t'CONNECT',\r\n\t'TRACE',\r\n];\r\n","import React from 'react';\r\nimport { METHODS } from '../helpers/Methods';\r\nimport './Request.css';\r\n\r\nexport const Request = props => {\r\n\treturn (\r\n\t\t<section className='request'>\r\n\t\t\t<h2>Request</h2>\r\n\t\t\t<div className='intro'>\r\n\t\t\t\t<input\r\n\t\t\t\t\tname='method'\r\n\t\t\t\t\tlist='methods'\r\n\t\t\t\t\tclassName='methods'\r\n\t\t\t\t\tplaceholder='METHOD'\r\n\t\t\t\t\tonChange={event => props.changed({ method: event.target.value })}\r\n\t\t\t\t/>\r\n\t\t\t\t<datalist id='methods'>\r\n\t\t\t\t\t{METHODS.map(method => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<option key={method} value={method}>\r\n\t\t\t\t\t\t\t\t{method}\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</datalist>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName='url'\r\n\t\t\t\t\tplaceholder='URL'\r\n\t\t\t\t\tvalue={props.requestState.url}\r\n\t\t\t\t\tonChange={event => props.changed({ url: event.target.value })}\r\n\t\t\t\t/>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName='send'\r\n\t\t\t\t\tonClick={props.sendRequest}\r\n\t\t\t\t\tdisabled={!props.requestState.url}>\r\n\t\t\t\t\tSend\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div className='input_element'>\r\n\t\t\t\t<label>Headers</label>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tplaceholder='Type the headers of the request here'\r\n\t\t\t\t\tonChange={event =>\r\n\t\t\t\t\t\tprops.changed({\r\n\t\t\t\t\t\t\theaders: event.target.value,\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\trows={props.requestState.headers ? 10 : 1}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='input_element'>\r\n\t\t\t\t<label>Body</label>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tplaceholder='Type the body of the request here'\r\n\t\t\t\t\tonChange={event => props.changed({ data: event.target.value })}\r\n\t\t\t\t\trows={props.requestState.data ? 10 : 1}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='input_element'>\r\n\t\t\t\t<label>Other Options</label>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tonChange={event => props.changed({ options: event.target.value })}\r\n\t\t\t\t\tplaceholder='You can pass a JSON object containing other parameters that you want to add to the request'\r\n\t\t\t\t\trows={props.requestState.options ? 10 : 1}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n","import React from 'react';\r\n\r\nexport const Response = props => {\r\n\tconst res = props.responseState.response;\r\n\tconst err = props.responseState.error;\r\n\treturn (\r\n\t\t<section className='response'>\r\n\t\t\t<h2>Response</h2>\r\n\t\t\t<div className='input_element'>\r\n\t\t\t\t<label>Status</label>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tvalue={\r\n\t\t\t\t\t\tres && res.status ? res.status : err && err.status ? err.status : ''\r\n\t\t\t\t\t}\r\n\t\t\t\t\tplaceholder=''\r\n\t\t\t\t\treadOnly\r\n\t\t\t\t\trows={1}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='input_element'>\r\n\t\t\t\t<label>Status Text</label>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tvalue={\r\n\t\t\t\t\t\tres && res.statusText\r\n\t\t\t\t\t\t\t? res.statusText\r\n\t\t\t\t\t\t\t: err && err.statusText\r\n\t\t\t\t\t\t\t? err.statusText\r\n\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t}\r\n\t\t\t\t\tplaceholder=''\r\n\t\t\t\t\trows={1}\r\n\t\t\t\t\treadOnly\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='input_element'>\r\n\t\t\t\t<label>Data</label>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tvalue={\r\n\t\t\t\t\t\tres && res.data\r\n\t\t\t\t\t\t\t? JSON.stringify(res.data, undefined, 4)\r\n\t\t\t\t\t\t\t: err && err.data\r\n\t\t\t\t\t\t\t? JSON.stringify(err.data, undefined, 4)\r\n\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t}\r\n\t\t\t\t\trows={(res && res.data) || (err && err.data) ? 10 : 1}\r\n\t\t\t\t\tplaceholder=''\r\n\t\t\t\t\treadOnly\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='input_element'>\r\n\t\t\t\t<label>Headers</label>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tvalue={\r\n\t\t\t\t\t\tres && res.headers\r\n\t\t\t\t\t\t\t? JSON.stringify(res.headers, undefined, 4)\r\n\t\t\t\t\t\t\t: err && err.headers\r\n\t\t\t\t\t\t\t? JSON.stringify(err.headers, undefined, 4)\r\n\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t}\r\n\t\t\t\t\trows={(res && res.headers) || (err && err.headers) ? 10 : 1}\r\n\t\t\t\t\tplaceholder=''\r\n\t\t\t\t\treadOnly\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='input_element'>\r\n\t\t\t\t<label>Config</label>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tvalue={\r\n\t\t\t\t\t\tres && res.config\r\n\t\t\t\t\t\t\t? JSON.stringify(res.config, undefined, 4)\r\n\t\t\t\t\t\t\t: err && err.config\r\n\t\t\t\t\t\t\t? JSON.stringify(err.config, undefined, 4)\r\n\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t}\r\n\t\t\t\t\trows={(res && res.config) || (err && err.config) ? 10 : 1}\r\n\t\t\t\t\tplaceholder=''\r\n\t\t\t\t\treadOnly\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport './Intro.css';\r\n\r\nexport const Intro = () => {\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<h1>PostWoman</h1>\r\n\t\t\t<p>\r\n\t\t\t\tLorem ipsum dolor sit amet consectetur adipisicing elit. Voluptate,\r\n\t\t\t\trepudiandae eius distinctio laboriosam enim quo animi eum recusandae\r\n\t\t\t\teveniet voluptatum, impedit dolor. Impedit laudantium minus deleniti ut\r\n\t\t\t\tdignissimos totam quo!\r\n\t\t\t</p>\r\n\t\t</header>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport './Logs.css';\r\n\r\nexport const Logs = props => {\r\n\treturn (\r\n\t\t<article className='logs'>\r\n\t\t\t<h2>Logs</h2>\r\n\t\t\t<div className='logs_body'>\r\n\t\t\t\t<h3>Wow, such empty</h3>\r\n\t\t\t</div>\r\n\t\t</article>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport './Footer.css';\r\n\r\nexport const Footer = () => {\r\n\treturn <footer>elaroussi.me</footer>;\r\n};\r\n","export const parse = raw => {\r\n\ttry {\r\n\t\treturn JSON.parse(raw);\r\n\t} catch {\r\n\t\treturn raw;\r\n\t}\r\n};\r\n","import { parse } from './parse';\r\n\r\nexport const withElementParsed = (container, ...elements) => {\r\n\telements.forEach(element => {\r\n\t\tif (container[element]) {\r\n\t\t\tcontainer[element] = parse(container[element]);\r\n\t\t}\r\n\t});\r\n\treturn container;\r\n};\r\n","import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { Axios } from '../helpers/Axios';\r\nimport { initialRequestState, requestReducer } from '../reducers/Request';\r\nimport { initialResponseState, responseReducer } from '../reducers/Response';\r\nimport { Request } from './Request';\r\nimport { Response } from './Response';\r\nimport { Intro } from './Intro';\r\nimport { Logs } from './Logs';\r\nimport { Footer } from './Footer';\r\nimport { withElementParsed } from '../helpers/withElementsParsed';\r\nimport { normalizeUrl } from '../helpers/normalizeUrl';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\tconst [requestState, dispatch] = useReducer(\r\n\t\trequestReducer,\r\n\t\tinitialRequestState\r\n\t);\r\n\r\n\tconst [responseState, dispatchResponse] = useReducer(\r\n\t\tresponseReducer,\r\n\t\tinitialResponseState\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\t// console.log(requestState);\r\n\t}, [requestState]);\r\n\tuseEffect(() => {\r\n\t\t// console.log(responseState);\r\n\t}, [responseState]);\r\n\r\n\tconst onRequestChange = change => {\r\n\t\tdispatch({ type: 'ELEMENT_CHANGE', change });\r\n\t};\r\n\r\n\tconst sendRequest = async () => {\r\n\t\tif (requestState.url) {\r\n\t\t\tlet config = withElementParsed(\r\n\t\t\t\t{ ...requestState },\r\n\t\t\t\t'headers',\r\n\t\t\t\t'data',\r\n\t\t\t\t'options'\r\n\t\t\t);\r\n\t\t\tconfig.url = normalizeUrl(config.url);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst res = await Axios(config);\r\n\t\t\t\tdispatchResponse({ type: 'SET_RESPONSE', response: res });\r\n\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tdispatchResponse({\r\n\t\t\t\t\ttype: 'SET_ERROR',\r\n\t\t\t\t\terror: err.response || err.request || err,\r\n\t\t\t\t});\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tconsole.log({ error: err.response || err.request || err });\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<main className='app'>\r\n\t\t\t<Intro />\r\n\t\t\t<article className='row'>\r\n\t\t\t\t<div className='inputs'>\r\n\t\t\t\t\t<Request\r\n\t\t\t\t\t\tchanged={onRequestChange}\r\n\t\t\t\t\t\trequestState={requestState}\r\n\t\t\t\t\t\tsendRequest={sendRequest}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Response responseState={responseState} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<Logs />\r\n\t\t\t</article>\r\n\t\t\t<Footer />\r\n\t\t</main>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","export const normalizeUrl = url => {\r\n\treturn url.toLowerCase().startsWith('http://') ||\r\n\t\turl.toLowerCase().startsWith('https://')\r\n\t\t? url\r\n\t\t: 'http://' + url;\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}