{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["METHODS","initialRequestState","transformRequest","data","headers","JSON","parse","initialResponseState","responseReducer","state","action","type","response","error","Error","requestReducer","url","method","body","options","App","useReducer","requestState","dispatch","responseState","dispatchResponse","useEffect","console","log","sendRequest","a","config","toLowerCase","startsWith","Axios","res","request","err","className","name","list","placeholder","onChange","event","target","value","id","map","key","onClick","disabled","rows","status","readOnly","statusText","stringify","undefined","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.6220c9cf.chunk.js","sourcesContent":["import Axios from 'axios';\r\nimport React, { useReducer, useEffect } from 'react';\r\n\r\nimport './App.css';\r\n\r\nconst METHODS = [\r\n\t'GET',\r\n\t'POST',\r\n\t'PUT',\r\n\t'DELETE',\r\n\t'PATCH',\r\n\t'HEAD',\r\n\t'OPTIONS',\r\n\t'CONNECT',\r\n\t'TRACE',\r\n];\r\n\r\nconst initialRequestState = {\r\n\ttransformRequest: (data, headers) => {\r\n\t\ttry {\r\n\t\t\tconst transformedData = JSON.parse(data);\r\n\t\t\treturn transformedData;\r\n\t\t} catch {\r\n\t\t\treturn data;\r\n\t\t}\r\n\t},\r\n};\r\nconst initialResponseState = {};\r\n\r\nconst responseReducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'SET_RESPONSE':\r\n\t\t\treturn { ...state, response: action.response, error: null };\r\n\t\tcase 'SET_ERROR':\r\n\t\t\treturn { ...state, error: action.error, response: null };\r\n\t\tdefault:\r\n\t\t\tthrow new Error('Invalid Request Action');\r\n\t}\r\n};\r\n\r\nconst requestReducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'URL_CHANGE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\turl: action.url,\r\n\t\t\t};\r\n\t\tcase 'METHOD_CHANGE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmethod: action.method,\r\n\t\t\t};\r\n\t\tcase 'HEADERS_CHANGE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\theaders: action.headers,\r\n\t\t\t};\r\n\t\tcase 'BODY_CHANGE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata: action.body,\r\n\t\t\t};\r\n\t\tcase 'OPTIONS_CHANGE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\toptions: action.options,\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\tthrow new Error('Invalid Response Action');\r\n\t}\r\n};\r\n\r\nfunction App() {\r\n\tconst [requestState, dispatch] = useReducer(\r\n\t\trequestReducer,\r\n\t\tinitialRequestState\r\n\t);\r\n\r\n\tconst [responseState, dispatchResponse] = useReducer(\r\n\t\tresponseReducer,\r\n\t\tinitialResponseState\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\t// console.log(requestState);\r\n\t}, [requestState]);\r\n\tuseEffect(() => {\r\n\t\tconsole.log(responseState);\r\n\t}, [responseState]);\r\n\r\n\tconst onUrlChange = event => {\r\n\t\tdispatch({ type: 'URL_CHANGE', url: event.target.value });\r\n\t};\r\n\r\n\tconst onMethodChange = event => {\r\n\t\tdispatch({ type: 'METHOD_CHANGE', method: event.target.value });\r\n\t};\r\n\r\n\tconst onHeadersChange = event => {\r\n\t\tdispatch({ type: 'HEADERS_CHANGE', headers: event.target.value });\r\n\t};\r\n\r\n\tconst onBodyChange = event => {\r\n\t\tdispatch({ type: 'BODY_CHANGE', body: event.target.value });\r\n\t};\r\n\r\n\tconst onOptionsChange = event => {\r\n\t\tdispatch({ type: 'OPTIONS_CHANGE', options: event.target.value });\r\n\t};\r\n\r\n\tconst sendRequest = async () => {\r\n\t\tif (requestState.url) {\r\n\t\t\tlet config = requestState;\r\n\t\t\tconfig.url =\r\n\t\t\t\tconfig.url.toLowerCase().startsWith('http://') ||\r\n\t\t\t\tconfig.url.toLowerCase().startsWith('https://')\r\n\t\t\t\t\t? config.url\r\n\t\t\t\t\t: 'http://' + config.url;\r\n\t\t\tif (requestState.headers) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconfig.headers = JSON.parse(config.headers);\r\n\t\t\t\t} catch {}\r\n\t\t\t}\r\n\t\t\tif (requestState.options) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconfig = { ...config, ...JSON.parse(config.options) };\r\n\t\t\t\t} catch {}\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\tconst res = await Axios(config);\r\n\t\t\t\tdispatchResponse({ type: 'SET_RESPONSE', response: res });\r\n\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tdispatchResponse({\r\n\t\t\t\t\ttype: 'SET_ERROR',\r\n\t\t\t\t\terror: err.response || err.request || err,\r\n\t\t\t\t});\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tconsole.log({ error: err.response || err.request || err });\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst res = responseState.response;\r\n\tconst err = responseState.error;\r\n\r\n\treturn (\r\n\t\t<main className='app'>\r\n\t\t\t<header>\r\n\t\t\t\t<h1>PostWomen</h1>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tLorem ipsum dolor sit amet consectetur adipisicing elit. Voluptate,\r\n\t\t\t\t\trepudiandae eius distinctio laboriosam enim quo animi eum recusandae\r\n\t\t\t\t\teveniet voluptatum, impedit dolor. Impedit laudantium minus deleniti\r\n\t\t\t\t\tut dignissimos totam quo!\r\n\t\t\t\t</p>\r\n\t\t\t</header>\r\n\t\t\t<article className='row'>\r\n\t\t\t\t<div className='inputs'>\r\n\t\t\t\t\t<section className='request'>\r\n\t\t\t\t\t\t<h2>Request</h2>\r\n\t\t\t\t\t\t<div className='intro'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tname='method'\r\n\t\t\t\t\t\t\t\tlist='methods'\r\n\t\t\t\t\t\t\t\tclassName='methods'\r\n\t\t\t\t\t\t\t\tplaceholder='METHOD'\r\n\t\t\t\t\t\t\t\tonChange={onMethodChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<datalist id='methods'>\r\n\t\t\t\t\t\t\t\t{METHODS.map(method => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<option key={method} value={method}>\r\n\t\t\t\t\t\t\t\t\t\t\t{method}\r\n\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</datalist>\r\n\t\t\t\t\t\t\t<input className='url' placeholder='URL' onChange={onUrlChange} />\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName='send'\r\n\t\t\t\t\t\t\t\tonClick={sendRequest}\r\n\t\t\t\t\t\t\t\tdisabled={!requestState.url}>\r\n\t\t\t\t\t\t\t\tSend\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='input_element'>\r\n\t\t\t\t\t\t\t<label>Headers</label>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\tplaceholder='Type the headers of the request here'\r\n\t\t\t\t\t\t\t\tonChange={onHeadersChange}\r\n\t\t\t\t\t\t\t\trows={requestState.headers ? 10 : 1}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='input_element'>\r\n\t\t\t\t\t\t\t<label>Body</label>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\tplaceholder='Type the body of the request here'\r\n\t\t\t\t\t\t\t\tonChange={onBodyChange}\r\n\t\t\t\t\t\t\t\trows={requestState.data ? 10 : 1}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='input_element'>\r\n\t\t\t\t\t\t\t<label>Other Options</label>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\tonChange={onOptionsChange}\r\n\t\t\t\t\t\t\t\tplaceholder='You can pass a JSON object containing other parameters that you want to add to the request'\r\n\t\t\t\t\t\t\t\trows={requestState.options ? 10 : 1}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t\t<section className='response'>\r\n\t\t\t\t\t\t<h2>Response</h2>\r\n\t\t\t\t\t\t<div className='input_element'>\r\n\t\t\t\t\t\t\t<label>Status</label>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\tvalue={\r\n\t\t\t\t\t\t\t\t\tres && res.status\r\n\t\t\t\t\t\t\t\t\t\t? res.status\r\n\t\t\t\t\t\t\t\t\t\t: err && err.status\r\n\t\t\t\t\t\t\t\t\t\t? err.status\r\n\t\t\t\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tplaceholder=''\r\n\t\t\t\t\t\t\t\treadOnly\r\n\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='input_element'>\r\n\t\t\t\t\t\t\t<label>Status Text</label>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\tvalue={\r\n\t\t\t\t\t\t\t\t\tres && res.statusText\r\n\t\t\t\t\t\t\t\t\t\t? res.statusText\r\n\t\t\t\t\t\t\t\t\t\t: err && err.statusText\r\n\t\t\t\t\t\t\t\t\t\t? err.statusText\r\n\t\t\t\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tplaceholder=''\r\n\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\treadOnly\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='input_element'>\r\n\t\t\t\t\t\t\t<label>Data</label>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\tvalue={\r\n\t\t\t\t\t\t\t\t\tres && res.data\r\n\t\t\t\t\t\t\t\t\t\t? JSON.stringify(res.data, undefined, 4)\r\n\t\t\t\t\t\t\t\t\t\t: err && err.data\r\n\t\t\t\t\t\t\t\t\t\t? JSON.stringify(err.data, undefined, 4)\r\n\t\t\t\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\trows={(res && res.data) || (err && err.data) ? 10 : 1}\r\n\t\t\t\t\t\t\t\tplaceholder=''\r\n\t\t\t\t\t\t\t\treadOnly\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='input_element'>\r\n\t\t\t\t\t\t\t<label>Headers</label>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\tvalue={\r\n\t\t\t\t\t\t\t\t\tres && res.headers\r\n\t\t\t\t\t\t\t\t\t\t? JSON.stringify(res.headers, undefined, 4)\r\n\t\t\t\t\t\t\t\t\t\t: err && err.headers\r\n\t\t\t\t\t\t\t\t\t\t? JSON.stringify(err.headers, undefined, 4)\r\n\t\t\t\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\trows={(res && res.headers) || (err && err.headers) ? 10 : 1}\r\n\t\t\t\t\t\t\t\tplaceholder=''\r\n\t\t\t\t\t\t\t\treadOnly\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='input_element'>\r\n\t\t\t\t\t\t\t<label>Config</label>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\tvalue={\r\n\t\t\t\t\t\t\t\t\tres && res.config\r\n\t\t\t\t\t\t\t\t\t\t? JSON.stringify(res.config, undefined, 4)\r\n\t\t\t\t\t\t\t\t\t\t: err && err.config\r\n\t\t\t\t\t\t\t\t\t\t? JSON.stringify(err.config, undefined, 4)\r\n\t\t\t\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\trows={(res && res.config) || (err && err.config) ? 10 : 1}\r\n\t\t\t\t\t\t\t\tplaceholder=''\r\n\t\t\t\t\t\t\t\treadOnly\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t</div>\r\n\t\t\t\t<article className='logs'>\r\n\t\t\t\t\t<h2>Logs</h2>\r\n\t\t\t\t</article>\r\n\t\t\t</article>\r\n\t\t\t<footer>elaroussi.me</footer>\r\n\t\t</main>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}