{"version":3,"sources":["helpers/parse.js","helpers/Axios.js","helpers/withElementsParsed.js","helpers/useLocalStorage.js","helpers/updateLocalStorage.js","reducers/Request.js","reducers/Response.js","helpers/Methods.js","component/Request.js","component/Response.js","component/Intro.js","component/Error.js","component/LogTooltip.js","component/Logs.js","component/Footer.js","component/App.js","serviceWorker.js","index.js"],"names":["parse","raw","JSON","Axios","axios","create","interceptors","request","use","config","updatedConfig","container","elements","forEach","element","withElementParsed","requestID","uid","sendingTime","moment","format","options","error","Promise","reject","updateLocalStorage","logs","log","setLogs","updatedLogs","unshift","stringify","initialRequestState","requestReducer","state","action","type","change","Error","initialResponseState","responseReducer","response","errorMessage","METHODS","Request","props","className","name","list","title","placeholder","onChange","event","changed","method","target","value","id","map","key","url","onClick","sendRequest","disabled","requestState","disableSend","Tooltip","headers","rows","data","interactive","Response","res","responseState","err","status","readOnly","statusText","undefined","Intro","handleClose","clearErrorMessage","Snackbar","anchorOrigin","vertical","horizontal","open","Boolean","autoHideDuration","onClose","message","IconButton","size","aria-label","color","fontSize","LogTooltip","toUpperCase","Logs","HtmlTooltip","withStyles","theme","tooltip","backgroundColor","maxWidth","typography","pxToRem","textAlign","border","length","arrow","clear","Footer","App","initialValue","useState","item","window","localStorage","getItem","console","storedValue","setStoredValue","valueToStore","Function","setItem","useLocalStorage","setDisableSend","useReducer","dispatch","dispatchResponse","a","isObject","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.62607846.chunk.js","sourcesContent":["export const parse = raw => {\r\n\ttry {\r\n\t\treturn JSON.parse(raw);\r\n\t} catch {\r\n\t\treturn raw;\r\n\t}\r\n};\r\n","import axios from 'axios';\r\nimport moment from 'moment';\r\nimport { withElementParsed } from './withElementsParsed';\r\nimport uid from 'uid';\r\n\r\nexport const Axios = axios.create();\r\n\r\nAxios.interceptors.request.use(\r\n\tfunction (config) {\r\n\t\tlet updatedConfig = withElementParsed({ ...config }, 'headers', 'options');\r\n\t\tupdatedConfig.requestID = uid();\r\n\t\tupdatedConfig.sendingTime = moment().format('MMMM Do YYYY, h:mm:ss a');\r\n\t\tif (updatedConfig.options) {\r\n\t\t\tupdatedConfig = { ...updatedConfig, ...updatedConfig.options };\r\n\t\t\tdelete updatedConfig.options;\r\n\t\t}\r\n\t\treturn updatedConfig;\r\n\t},\r\n\tfunction (error) {\r\n\t\treturn Promise.reject(error);\r\n\t}\r\n);\r\n","import { parse } from './parse';\r\n\r\nexport const withElementParsed = (container, ...elements) => {\r\n\telements.forEach(element => {\r\n\t\tif (container[element]) {\r\n\t\t\tcontainer[element] = parse(container[element]);\r\n\t\t}\r\n\t});\r\n\treturn container;\r\n};\r\n","import { useState } from 'react';\r\n\r\n// Hook to use whenever you have interaction with the browser local storage\r\nexport const useLocalStorage = (key, initialValue) => {\r\n\tconst [storedValue, setStoredValue] = useState(() => {\r\n\t\ttry {\r\n\t\t\tconst item = window.localStorage.getItem(key);\r\n\t\t\treturn item ? JSON.parse(item) : initialValue;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\treturn initialValue;\r\n\t\t}\r\n\t});\r\n\r\n\tconst setValue = value => {\r\n\t\ttry {\r\n\t\t\tconst valueToStore =\r\n\t\t\t\tvalue instanceof Function ? value(storedValue) : value;\r\n\t\t\tsetStoredValue(valueToStore);\r\n\t\t\twindow.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\treturn [storedValue, setValue];\r\n};\r\n","export const updateLocalStorage = (logs, log, setLogs) => {\r\n\tconst updatedLogs = JSON.parse(logs);\r\n\tupdatedLogs.unshift(log);\r\n\tsetLogs(JSON.stringify(updatedLogs));\r\n\treturn updatedLogs;\r\n};\r\n","export const initialRequestState = {};\r\n\r\nexport const requestReducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'ELEMENT_CHANGE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.change,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\tthrow new Error('Invalid Response Action');\r\n\t}\r\n};\r\n","export const initialResponseState = {};\r\nexport const responseReducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'SET_RESPONSE':\r\n\t\t\treturn { response: action.response };\r\n\t\tcase 'SET_ERROR':\r\n\t\t\treturn {\r\n\t\t\t\terror: action.error,\r\n\t\t\t\terrorMessage: action.errorMessage,\r\n\t\t\t};\r\n\t\tcase 'CLEAR':\r\n\t\t\treturn { errorMessage: action.errorMessage };\r\n\t\tcase 'CLEAR_ERROR_MESSAGE':\r\n\t\t\treturn { ...state, errorMessage: null };\r\n\t\tdefault:\r\n\t\t\tthrow new Error('Invalid Request Action');\r\n\t}\r\n};\r\n","export const METHODS = [\r\n\t'GET',\r\n\t'POST',\r\n\t'PUT',\r\n\t'DELETE',\r\n\t'PATCH',\r\n\t'HEAD',\r\n\t'OPTIONS',\r\n\t'CONNECT',\r\n\t'TRACE',\r\n];\r\n","import React from 'react';\r\nimport { METHODS } from '../helpers/Methods';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport './Request.css';\r\n\r\nexport const Request = props => {\r\n\treturn (\r\n\t\t<section className='request'>\r\n\t\t\t<h2>Request</h2>\r\n\t\t\t<div className='intro'>\r\n\t\t\t\t<input\r\n\t\t\t\t\tname='method'\r\n\t\t\t\t\tlist='methods'\r\n\t\t\t\t\ttitle='GET by default'\r\n\t\t\t\t\tclassName='methods'\r\n\t\t\t\t\tplaceholder='METHOD'\r\n\t\t\t\t\tonChange={event => props.changed({ method: event.target.value })}\r\n\t\t\t\t/>\r\n\t\t\t\t<datalist id='methods'>\r\n\t\t\t\t\t{METHODS.map(method => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<option key={method} value={method}>\r\n\t\t\t\t\t\t\t\t{method}\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</datalist>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName='url'\r\n\t\t\t\t\tplaceholder='URL'\r\n\t\t\t\t\tonChange={event => props.changed({ url: event.target.value })}\r\n\t\t\t\t/>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName='send'\r\n\t\t\t\t\tonClick={props.sendRequest}\r\n\t\t\t\t\tdisabled={!props.requestState.url || props.disableSend}>\r\n\t\t\t\t\tSend\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div className='input_element'>\r\n\t\t\t\t<label>\r\n\t\t\t\t\tHeaders\r\n\t\t\t\t\t<Tooltip title='Optional: Pass your headers as a JSON object'>\r\n\t\t\t\t\t\t<span>i</span>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t</label>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tplaceholder='Type the headers of the request here in JSON format'\r\n\t\t\t\t\tonChange={event =>\r\n\t\t\t\t\t\tprops.changed({\r\n\t\t\t\t\t\t\theaders: event.target.value,\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\trows={props.requestState.headers ? 10 : 1}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='input_element'>\r\n\t\t\t\t<label>\r\n\t\t\t\t\tBody\r\n\t\t\t\t\t<Tooltip title={'Optional: Plain text or JSON format'}>\r\n\t\t\t\t\t\t<span>i</span>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t</label>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tplaceholder='Type the body of the request here in JSON format'\r\n\t\t\t\t\tonChange={event => props.changed({ data: event.target.value })}\r\n\t\t\t\t\trows={props.requestState.data ? 10 : 1}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='input_element'>\r\n\t\t\t\t<label>\r\n\t\t\t\t\tOther Options\r\n\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\tinteractive\r\n\t\t\t\t\t\ttitle='Optional: Pass a additional options as a JSON object, something like: responseType, timeout, proxy, maxRedirects, maxBodyLength, maxContentLength... Visit https://github.com/axios/axios#request-config to see what options you can add to the http request.'>\r\n\t\t\t\t\t\t<span>i</span>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t</label>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tonChange={event => props.changed({ options: event.target.value })}\r\n\t\t\t\t\tplaceholder='You can pass a JSON object containing other parameters that you want to add to the request'\r\n\t\t\t\t\trows={props.requestState.options ? 10 : 1}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n","import React from 'react';\r\n\r\nexport const Response = props => {\r\n\tconst res = props.responseState.response;\r\n\tconst err = props.responseState.error;\r\n\treturn (\r\n\t\t<section className='response'>\r\n\t\t\t<h2>Response</h2>\r\n\t\t\t<div className='input_element'>\r\n\t\t\t\t<label>Status</label>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tvalue={\r\n\t\t\t\t\t\tres && res.status ? res.status : err && err.status ? err.status : ''\r\n\t\t\t\t\t}\r\n\t\t\t\t\tplaceholder=''\r\n\t\t\t\t\treadOnly\r\n\t\t\t\t\trows={1}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='input_element'>\r\n\t\t\t\t<label>Status Text</label>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tvalue={\r\n\t\t\t\t\t\tres && res.statusText\r\n\t\t\t\t\t\t\t? res.statusText\r\n\t\t\t\t\t\t\t: err && err.statusText\r\n\t\t\t\t\t\t\t? err.statusText\r\n\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t}\r\n\t\t\t\t\tplaceholder=''\r\n\t\t\t\t\trows={1}\r\n\t\t\t\t\treadOnly\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='input_element'>\r\n\t\t\t\t<label>Data</label>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tvalue={\r\n\t\t\t\t\t\tres && res.data\r\n\t\t\t\t\t\t\t? JSON.stringify(res.data, undefined, 4)\r\n\t\t\t\t\t\t\t: err && err.data\r\n\t\t\t\t\t\t\t? JSON.stringify(err.data, undefined, 4)\r\n\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t}\r\n\t\t\t\t\trows={(res && res.data) || (err && err.data) ? 10 : 1}\r\n\t\t\t\t\tplaceholder=''\r\n\t\t\t\t\treadOnly\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='input_element'>\r\n\t\t\t\t<label>Headers</label>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tvalue={\r\n\t\t\t\t\t\tres && res.headers\r\n\t\t\t\t\t\t\t? JSON.stringify(res.headers, undefined, 4)\r\n\t\t\t\t\t\t\t: err && err.headers\r\n\t\t\t\t\t\t\t? JSON.stringify(err.headers, undefined, 4)\r\n\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t}\r\n\t\t\t\t\trows={(res && res.headers) || (err && err.headers) ? 10 : 1}\r\n\t\t\t\t\tplaceholder=''\r\n\t\t\t\t\treadOnly\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='input_element'>\r\n\t\t\t\t<label>Config</label>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tvalue={\r\n\t\t\t\t\t\tres && res.config\r\n\t\t\t\t\t\t\t? JSON.stringify(res.config, undefined, 4)\r\n\t\t\t\t\t\t\t: err && err.config\r\n\t\t\t\t\t\t\t? JSON.stringify(err.config, undefined, 4)\r\n\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t}\r\n\t\t\t\t\trows={(res && res.config) || (err && err.config) ? 10 : 1}\r\n\t\t\t\t\tplaceholder=''\r\n\t\t\t\t\treadOnly\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport './Intro.css';\r\n\r\nexport const Intro = () => {\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<h1>PostWoman</h1>\r\n\t\t\t<p>\r\n\t\t\t\tQuickly and easily send REST, SOAP, and GraphQL requests directly within\r\n\t\t\t\tPostwoman.\r\n\t\t\t</p>\r\n\t\t</header>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nexport const Error = props => {\r\n\tconst handleClose = () => {\r\n\t\tprops.clearErrorMessage();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Snackbar\r\n\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\thorizontal: 'center',\r\n\t\t\t\t}}\r\n\t\t\t\topen={Boolean(props.errorMessage)}\r\n\t\t\t\tautoHideDuration={3000}\r\n\t\t\t\tonClose={handleClose}\r\n\t\t\t\tmessage={props.errorMessage}\r\n\t\t\t\taction={\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\taria-label='close'\r\n\t\t\t\t\t\tcolor='inherit'\r\n\t\t\t\t\t\tonClick={handleClose}>\r\n\t\t\t\t\t\t<CloseIcon fontSize='small' />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport './LogTooltip.css';\r\nexport const LogTooltip = ({ log }) => {\r\n\treturn (\r\n\t\t<div className='log_tooltip'>\r\n\t\t\t<h4>{log.config.method.toUpperCase() + ': ' + log.config.url}</h4>\r\n\t\t\t{log.status && <p>Status: {log.status}</p>}\r\n\t\t\t{log.statusText && <p>Status Text: {log.statusText}</p>}\r\n\t\t\t{log.data && <p className='log_data'>Data: {JSON.stringify(log.data)}</p>}\r\n\t\t\t<span>{log.config.sendingTime}</span>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { LogTooltip } from './LogTooltip';\r\nimport './Logs.css';\r\n\r\nexport const Logs = props => {\r\n\tconst HtmlTooltip = withStyles(theme => ({\r\n\t\ttooltip: {\r\n\t\t\tbackgroundColor: 'var(--tooltip-background)',\r\n\t\t\tcolor: 'var(--tooltip-foreground)',\r\n\t\t\tmaxWidth: 300,\r\n\t\t\tfontSize: theme.typography.pxToRem(12),\r\n\t\t\ttextAlign: 'center',\r\n\t\t\tborder: '1px solid var(--tooltip-borders)',\r\n\t\t},\r\n\t}))(Tooltip);\r\n\r\n\treturn (\r\n\t\t<article className='logs'>\r\n\t\t\t<h2>Logs</h2>\r\n\t\t\t<div className='logs_body'>\r\n\t\t\t\t{!props.logs.length && <h3>Wow, such empty</h3>}\r\n\t\t\t\t{props.logs.map(log => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<HtmlTooltip\r\n\t\t\t\t\t\t\tarrow\r\n\t\t\t\t\t\t\tinteractive\r\n\t\t\t\t\t\t\ttitle={<LogTooltip log={log} />}\r\n\t\t\t\t\t\t\tkey={log.config.requestID}>\r\n\t\t\t\t\t\t\t<div className='log'>\r\n\t\t\t\t\t\t\t\t<span className='log_url'>{log.config.url}</span>\r\n\t\t\t\t\t\t\t\t<span className='log_timestamp'>{log.config.sendingTime}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</HtmlTooltip>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t\t{props.logs.length !== 0 && (\r\n\t\t\t\t\t<button onClick={props.clear} className='log_clear'>\r\n\t\t\t\t\t\tClear\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</article>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport './Footer.css';\r\n\r\nexport const Footer = () => {\r\n\treturn <footer>elaroussi.me</footer>;\r\n};\r\n","import React, { useReducer, useState } from 'react';\r\nimport isObject from 'isobject';\r\n\r\nimport { Axios } from '../helpers/Axios';\r\nimport { useLocalStorage } from '../helpers/useLocalStorage';\r\nimport { updateLocalStorage } from '../helpers/updateLocalStorage';\r\nimport { initialRequestState, requestReducer } from '../reducers/Request';\r\nimport { initialResponseState, responseReducer } from '../reducers/Response';\r\nimport { Request } from './Request';\r\nimport { Response } from './Response';\r\nimport { Intro } from './Intro';\r\nimport { Error } from './Error';\r\nimport { Logs } from './Logs';\r\nimport { Footer } from './Footer';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\tconst [logs, setLogs] = useLocalStorage('logs', '[]');\r\n\tconst [disableSend, setDisableSend] = useState(false);\r\n\r\n\tconst [requestState, dispatch] = useReducer(\r\n\t\trequestReducer,\r\n\t\tinitialRequestState\r\n\t);\r\n\r\n\tconst [responseState, dispatchResponse] = useReducer(\r\n\t\tresponseReducer,\r\n\t\tinitialResponseState\r\n\t);\r\n\r\n\tconst onRequestChange = change => {\r\n\t\tdispatch({ type: 'ELEMENT_CHANGE', change });\r\n\t};\r\n\r\n\tconst sendRequest = async () => {\r\n\t\tif (requestState.url) {\r\n\t\t\tsetDisableSend(true);\r\n\t\t\ttry {\r\n\t\t\t\tif (requestState.headers) {\r\n\t\t\t\t\tif (!isObject(JSON.parse(requestState.headers))) {\r\n\t\t\t\t\t\tthrow new Error(\"Can't parse headers to a valid JSON object\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst res = await Axios(requestState);\r\n\t\t\t\t\tdispatchResponse({ type: 'SET_RESPONSE', response: res });\r\n\t\t\t\t\tupdateLocalStorage(logs, res, setLogs);\r\n\t\t\t\t\tsetDisableSend(false);\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tif (err.response) {\r\n\t\t\t\t\t\tdispatchResponse({\r\n\t\t\t\t\t\t\ttype: 'SET_ERROR',\r\n\t\t\t\t\t\t\terror: err.response,\r\n\t\t\t\t\t\t\terrorMessage: err.message,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tupdateLocalStorage(logs, err.response, setLogs);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tupdateLocalStorage(logs, err, setLogs);\r\n\t\t\t\t\t\tdispatchResponse({ type: 'CLEAR', errorMessage: err.message });\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetDisableSend(false);\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tsetDisableSend(false);\r\n\t\t\t\tdispatchResponse({\r\n\t\t\t\t\ttype: 'CLEAR',\r\n\t\t\t\t\terrorMessage: 'Error parsing HTTP request header',\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<main className='app'>\r\n\t\t\t<Intro />\r\n\t\t\t<article className='row'>\r\n\t\t\t\t<div className='inputs'>\r\n\t\t\t\t\t<Request\r\n\t\t\t\t\t\tdisableSend={disableSend}\r\n\t\t\t\t\t\tchanged={onRequestChange}\r\n\t\t\t\t\t\trequestState={requestState}\r\n\t\t\t\t\t\tsendRequest={sendRequest}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Response responseState={responseState} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<Logs logs={JSON.parse(logs)} clear={() => setLogs('[]')} />\r\n\t\t\t</article>\r\n\t\t\t<Error\r\n\t\t\t\terrorMessage={responseState.errorMessage}\r\n\t\t\t\tclearErrorMessage={() =>\r\n\t\t\t\t\tdispatchResponse({ type: 'CLEAR_ERROR_MESSAGE' })\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t\t<Footer />\r\n\t\t</main>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}